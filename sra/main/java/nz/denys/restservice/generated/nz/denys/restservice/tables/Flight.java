/**
 * This class is generated by jOOQ
 */
package nz.denys.restservice.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nz.denys.restservice.Keys;
import nz.denys.restservice.tables.records.FlightRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Flight extends TableImpl<FlightRecord> {

	private static final long serialVersionUID = -1124352611;

	/**
	 * The reference instance of <code>flight.flight</code>
	 */
	public static final Flight FLIGHT = new Flight();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FlightRecord> getRecordType() {
		return FlightRecord.class;
	}

	/**
	 * The column <code>flight.flight.id</code>.
	 */
	public final TableField<FlightRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>flight.flight.flight_name</code>.
	 */
	public final TableField<FlightRecord, String> FLIGHT_NAME = createField("flight_name", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>flight.flight.departure</code>.
	 */
	public final TableField<FlightRecord, Timestamp> DEPARTURE = createField("departure", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>flight.flight</code> table reference
	 */
	public Flight() {
		this("flight", null);
	}

	/**
	 * Create an aliased <code>flight.flight</code> table reference
	 */
	public Flight(String alias) {
		this(alias, FLIGHT);
	}

	private Flight(String alias, Table<FlightRecord> aliased) {
		this(alias, aliased, null);
	}

	private Flight(String alias, Table<FlightRecord> aliased, Field<?>[] parameters) {
		super(alias, nz.denys.restservice.Flight.FLIGHT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<FlightRecord, Long> getIdentity() {
		return Keys.IDENTITY_FLIGHT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FlightRecord> getPrimaryKey() {
		return Keys.FLIGHT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FlightRecord>> getKeys() {
		return Arrays.<UniqueKey<FlightRecord>>asList(Keys.FLIGHT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Flight as(String alias) {
		return new Flight(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Flight rename(String name) {
		return new Flight(name, null);
	}
}
